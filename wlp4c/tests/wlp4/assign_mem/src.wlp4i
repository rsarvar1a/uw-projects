start BOF procedures EOF
BOF BOF
procedures main
main INT WAIN LPAREN dcl COMMA dcl RPAREN LBRACE dcls statements RETURN expr SEMI RBRACE
INT int
WAIN wain
LPAREN (
dcl type ID
type INT STAR
INT int
STAR *
ID a
COMMA ,
dcl type ID
type INT
INT int
ID b
RPAREN )
LBRACE {
dcls dcls dcl BECOMES NUM SEMI
dcls
dcl type ID
type INT
INT int
ID d
BECOMES =
NUM 5
SEMI ;
statements statements statement
statements statements statement
statements statements statement
statements statements statement
statements statements statement
statements statements statement
statements
statement lvalue BECOMES expr SEMI
lvalue STAR factor
STAR *
factor ID
ID a
BECOMES =
expr term
term factor
factor NUM
NUM 666
SEMI ;
statement PRINTLN LPAREN expr RPAREN SEMI
PRINTLN println
LPAREN (
expr term
term factor
factor STAR factor
STAR *
factor ID
ID a
RPAREN )
SEMI ;
statement lvalue BECOMES expr SEMI
lvalue STAR factor
STAR *
factor ID
ID a
BECOMES =
expr term
term factor
factor ID
ID d
SEMI ;
statement PRINTLN LPAREN expr RPAREN SEMI
PRINTLN println
LPAREN (
expr term
term factor
factor STAR factor
STAR *
factor ID
ID a
RPAREN )
SEMI ;
statement lvalue BECOMES expr SEMI
lvalue STAR factor
STAR *
factor LPAREN expr RPAREN
LPAREN (
expr expr PLUS term
expr term
term factor
factor ID
ID a
PLUS +
term factor
factor NUM
NUM 1
RPAREN )
BECOMES =
expr expr PLUS term
expr term
term factor
factor ID
ID d
PLUS +
term factor
factor NUM
NUM 1
SEMI ;
statement PRINTLN LPAREN expr RPAREN SEMI
PRINTLN println
LPAREN (
expr term
term factor
factor STAR factor
STAR *
factor LPAREN expr RPAREN
LPAREN (
expr expr PLUS term
expr term
term factor
factor ID
ID a
PLUS +
term factor
factor NUM
NUM 1
RPAREN )
RPAREN )
SEMI ;
RETURN return
expr term
term factor
factor STAR factor
STAR *
factor LPAREN expr RPAREN
LPAREN (
expr expr PLUS term
expr term
term factor
factor ID
ID a
PLUS +
term factor
factor NUM
NUM 1
RPAREN )
SEMI ;
RBRACE }
EOF EOF
