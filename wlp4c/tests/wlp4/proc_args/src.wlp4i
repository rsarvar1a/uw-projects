start BOF procedures EOF
BOF BOF
procedures procedure procedures
procedure INT ID LPAREN params RPAREN LBRACE dcls statements RETURN expr SEMI RBRACE
INT int
ID proc
LPAREN (
params paramlist
paramlist dcl COMMA paramlist
dcl type ID
type INT
INT int
ID a
COMMA ,
paramlist dcl COMMA paramlist
dcl type ID
type INT
INT int
ID b
COMMA ,
paramlist dcl
dcl type ID
type INT
INT int
ID c
RPAREN )
LBRACE {
dcls
statements statements statement
statements statements statement
statements statements statement
statements
statement lvalue BECOMES expr SEMI
lvalue ID
ID a
BECOMES =
expr expr PLUS term
expr term
term factor
factor ID
ID a
PLUS +
term factor
factor NUM
NUM 1
SEMI ;
statement lvalue BECOMES expr SEMI
lvalue ID
ID b
BECOMES =
expr expr MINUS term
expr term
term factor
factor ID
ID b
MINUS -
term factor
factor NUM
NUM 2
SEMI ;
statement lvalue BECOMES expr SEMI
lvalue ID
ID c
BECOMES =
expr expr PLUS term
expr expr PLUS term
expr term
term term STAR factor
term factor
factor NUM
NUM 4
STAR *
factor ID
ID a
PLUS +
term term STAR factor
term factor
factor NUM
NUM 4
STAR *
factor ID
ID b
PLUS +
term term STAR factor
term factor
factor NUM
NUM 4
STAR *
factor ID
ID c
SEMI ;
RETURN return
expr term
term factor
factor ID
ID c
SEMI ;
RBRACE }
procedures procedure procedures
procedure INT ID LPAREN params RPAREN LBRACE dcls statements RETURN expr SEMI RBRACE
INT int
ID modify
LPAREN (
params paramlist
paramlist dcl
dcl type ID
type INT STAR
INT int
STAR *
ID a
RPAREN )
LBRACE {
dcls
statements statements statement
statements
statement lvalue BECOMES expr SEMI
lvalue STAR factor
STAR *
factor ID
ID a
BECOMES =
expr expr PLUS term
expr term
term factor
factor STAR factor
STAR *
factor ID
ID a
PLUS +
term factor
factor NUM
NUM 1
SEMI ;
RETURN return
expr term
term factor
factor NUM
NUM 0
SEMI ;
RBRACE }
procedures main
main INT WAIN LPAREN dcl COMMA dcl RPAREN LBRACE dcls statements RETURN expr SEMI RBRACE
INT int
WAIN wain
LPAREN (
dcl type ID
type INT STAR
INT int
STAR *
ID a
COMMA ,
dcl type ID
type INT
INT int
ID b
RPAREN )
LBRACE {
dcls dcls dcl BECOMES NUM SEMI
dcls dcls dcl BECOMES NUM SEMI
dcls dcls dcl BECOMES NUM SEMI
dcls dcls dcl BECOMES NUM SEMI
dcls
dcl type ID
type INT
INT int
ID c
BECOMES =
NUM 0
SEMI ;
dcl type ID
type INT
INT int
ID d
BECOMES =
NUM 0
SEMI ;
dcl type ID
type INT
INT int
ID e
BECOMES =
NUM 0
SEMI ;
dcl type ID
type INT
INT int
ID ret
BECOMES =
NUM 0
SEMI ;
statements statements statement
statements statements statement
statements statements statement
statements statements statement
statements statements statement
statements statements statement
statements statements statement
statements statements statement
statements statements statement
statements statements statement
statements statements statement
statements statements statement
statements statements statement
statements
statement lvalue BECOMES expr SEMI
lvalue ID
ID c
BECOMES =
expr term
term factor
factor STAR factor
STAR *
factor ID
ID a
SEMI ;
statement lvalue BECOMES expr SEMI
lvalue ID
ID d
BECOMES =
expr term
term factor
factor STAR factor
STAR *
factor LPAREN expr RPAREN
LPAREN (
expr expr PLUS term
expr term
term factor
factor ID
ID a
PLUS +
term factor
factor NUM
NUM 1
RPAREN )
SEMI ;
statement lvalue BECOMES expr SEMI
lvalue ID
ID e
BECOMES =
expr term
term factor
factor STAR factor
STAR *
factor LPAREN expr RPAREN
LPAREN (
expr expr PLUS term
expr term
term factor
factor ID
ID a
PLUS +
term factor
factor NUM
NUM 2
RPAREN )
SEMI ;
statement PRINTLN LPAREN expr RPAREN SEMI
PRINTLN println
LPAREN (
expr term
term factor
factor STAR factor
STAR *
factor ID
ID a
RPAREN )
SEMI ;
statement lvalue BECOMES expr SEMI
lvalue ID
ID ret
BECOMES =
expr term
term factor
factor ID LPAREN arglist RPAREN
ID modify
LPAREN (
arglist expr
expr term
term factor
factor ID
ID a
RPAREN )
SEMI ;
statement PRINTLN LPAREN expr RPAREN SEMI
PRINTLN println
LPAREN (
expr term
term factor
factor STAR factor
STAR *
factor ID
ID a
RPAREN )
SEMI ;
statement PRINTLN LPAREN expr RPAREN SEMI
PRINTLN println
LPAREN (
expr term
term factor
factor ID
ID c
RPAREN )
SEMI ;
statement PRINTLN LPAREN expr RPAREN SEMI
PRINTLN println
LPAREN (
expr term
term factor
factor ID
ID d
RPAREN )
SEMI ;
statement PRINTLN LPAREN expr RPAREN SEMI
PRINTLN println
LPAREN (
expr term
term factor
factor ID
ID e
RPAREN )
SEMI ;
statement lvalue BECOMES expr SEMI
lvalue ID
ID ret
BECOMES =
expr term
term factor
factor ID LPAREN arglist RPAREN
ID proc
LPAREN (
arglist expr COMMA arglist
expr term
term factor
factor ID
ID c
COMMA ,
arglist expr COMMA arglist
expr term
term factor
factor ID
ID d
COMMA ,
arglist expr
expr term
term factor
factor ID
ID e
RPAREN )
SEMI ;
statement PRINTLN LPAREN expr RPAREN SEMI
PRINTLN println
LPAREN (
expr term
term factor
factor ID
ID c
RPAREN )
SEMI ;
statement PRINTLN LPAREN expr RPAREN SEMI
PRINTLN println
LPAREN (
expr term
term factor
factor ID
ID d
RPAREN )
SEMI ;
statement PRINTLN LPAREN expr RPAREN SEMI
PRINTLN println
LPAREN (
expr term
term factor
factor ID
ID e
RPAREN )
SEMI ;
RETURN return
expr term
term factor
factor ID
ID ret
SEMI ;
RBRACE }
EOF EOF
